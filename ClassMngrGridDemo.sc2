*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="classmngrgriddemo.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />

	DataSource = .NULL.
	Height = 200
	Left = 6
	Name = "Dataenvironment"
	Top = 387
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "customers", ;
		CursorSource = customers.dbf, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS frmclassmngrgriddemo AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="grdDemo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdDemo.Column1.Cabecera1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdDemo.Column1.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdDemo.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdDemo.Column2.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdDemo.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdDemo.Column3.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdDemo.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdDemo.Column4.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnCicleGridElements" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="mngGrdDemo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnSaveSources" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="btnRestoreSources" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkMngGrdDemoEnabled" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtMngGrdDemoAutoSizeColumns" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="optMngGrdDemoAutoSizeColumnsMode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkMngGrdDemoAlternateRowColorEnabled" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="optMngGrdDemoDynamicPropertiesMode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkMngGrdDemoSortEnabled" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtMngGrdDemoSortColumns" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkMngGrdDemoFindEnabled" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkMngGrdDemoFindBoxAlwaysVisible" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkMngGrdDemoAutoSizeColumnsEnabled" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdFooter" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Line1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdFooterUpdate" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: gridgetclientleftright
		*p: controlscount
		*a: acontrols[1,0]
	*</DefinedPropArrayMethod>

	AutoCenter = .T.
	Caption = "Class MngrGrid demo"
	controlscount = 0
	DataSession = 2
	DoCreate = .T.
	Height = 400
	Name = "frmClassMngrGridDemo"
	ShowTips = .T.
	Width = 600
	WindowType = 1

	ADD OBJECT 'btnCicleGridElements' AS commandbutton WITH ;
		Anchor = 6, ;
		Caption = "\<Cicle Grid elements", ;
		Height = 27, ;
		Left = 10, ;
		Name = "btnCicleGridElements", ;
		TabIndex = 5, ;
		ToolTipText = "Grid elements cicle ", ;
		Top = 300, ;
		Width = 120
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnRestoreSources' AS commandbutton WITH ;
		Anchor = 6, ;
		Caption = "\<Restore Sources", ;
		Height = 27, ;
		Left = 10, ;
		Name = "btnRestoreSources", ;
		TabIndex = 4, ;
		Top = 270, ;
		Width = 120
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'btnSaveSources' AS commandbutton WITH ;
		Anchor = 6, ;
		Caption = "\<Save Sources", ;
		Height = 27, ;
		Left = 10, ;
		Name = "btnSaveSources", ;
		TabIndex = 3, ;
		Top = 240, ;
		Width = 120
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'chkMngGrdDemoAlternateRowColorEnabled' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 6, ;
		Caption = "Alternate row color", ;
		ControlSource = "Thisform.mngGrdDemo.AlternateRowColorEnabled", ;
		Height = 17, ;
		Left = 150, ;
		Name = "chkMngGrdDemoAlternateRowColorEnabled", ;
		TabIndex = 10, ;
		ToolTipText = "Enable or disable alternate row color", ;
		Top = 305, ;
		Width = 119
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'chkMngGrdDemoAutoSizeColumnsEnabled' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 6, ;
		Caption = "Auto size enabled", ;
		ControlSource = "Thisform.mngGrdDemo.AutoSizeColumnsEnabled", ;
		Height = 17, ;
		Left = 150, ;
		Name = "chkMngGrdDemoAutoSizeColumnsEnabled", ;
		TabIndex = 7, ;
		ToolTipText = "Enable or disable grid manager", ;
		Top = 275, ;
		Width = 115
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'chkMngGrdDemoEnabled' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 6, ;
		Caption = "Grid manager enabled", ;
		ControlSource = "Thisform.mngGrdDemo.Enabled", ;
		Height = 17, ;
		Left = 140, ;
		Name = "chkMngGrdDemoEnabled", ;
		TabIndex = 6, ;
		ToolTipText = "Enable or disable grid manager", ;
		Top = 245, ;
		Width = 145
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'chkMngGrdDemoFindBoxAlwaysVisible' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 6, ;
		Caption = "Always visible", ;
		ControlSource = "Thisform.mngGrdDemo.FindBoxAlwaysVisible", ;
		Height = 17, ;
		Left = 285, ;
		Name = "chkMngGrdDemoFindBoxAlwaysVisible", ;
		TabIndex = 15, ;
		ToolTipText = "Enable or disable column sort", ;
		Top = 365, ;
		Width = 95
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'chkMngGrdDemoFindEnabled' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 6, ;
		Caption = "Find enabled", ;
		ControlSource = "Thisform.mngGrdDemo.FindEnabled", ;
		Height = 17, ;
		Left = 150, ;
		Name = "chkMngGrdDemoFindEnabled", ;
		TabIndex = 14, ;
		ToolTipText = "Enable or disable column sort", ;
		Top = 365, ;
		Width = 90
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'chkMngGrdDemoSortEnabled' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 6, ;
		Caption = "Sort enabled", ;
		ControlSource = "Thisform.mngGrdDemo.SortEnabled", ;
		Height = 17, ;
		Left = 150, ;
		Name = "chkMngGrdDemoSortEnabled", ;
		TabIndex = 12, ;
		ToolTipText = "Enable or disable column sort", ;
		Top = 335, ;
		Width = 88
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'cmdFooter' AS commandbutton WITH ;
		Anchor = 6, ;
		Caption = "\<Footer", ;
		Height = 27, ;
		Left = 11, ;
		Name = "cmdFooter", ;
		TabIndex = 5, ;
		ToolTipText = "Grid elements cicle ", ;
		Top = 330, ;
		Width = 120
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdFooterUpdate' AS commandbutton WITH ;
		Anchor = 6, ;
		Caption = "\<Footer Update", ;
		Height = 27, ;
		Left = 12, ;
		Name = "cmdFooterUpdate", ;
		TabIndex = 5, ;
		ToolTipText = "Grid elements cicle ", ;
		Top = 360, ;
		Width = 120
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'grdDemo' AS grid WITH ;
		AllowAddNew = .T., ;
		Anchor = 15, ;
		ColumnCount = 4, ;
		Height = 200, ;
		Left = 10, ;
		Name = "grdDemo", ;
		TabIndex = 1, ;
		Top = 30, ;
		Width = 580, ;
		Column1.ControlSource = "CustomerId", ;
		Column1.DynamicBackColor = "iif(Thisform.grdDemo.ActiveRow % 2 = 0, Rgb(120, 120, 150), Rgb(150, 150, 150))", ;
		Column1.Name = "Column1", ;
		Column1.ReadOnly = .F., ;
		Column2.ControlSource = "CompanyNam", ;
		Column2.Name = "Column2", ;
		Column2.ReadOnly = .F., ;
		Column3.ControlSource = "ContactNam", ;
		Column3.Name = "Column3", ;
		Column3.ReadOnly = .F., ;
		Column4.ControlSource = "ContactTit", ;
		Column4.Name = "Column4", ;
		Column4.ReadOnly = .F.
		*< END OBJECT: BaseClass="grid" />

	ADD OBJECT 'grdDemo.Column1.Cabecera1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Cabecera1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdDemo.Column1.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdDemo.Column2.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdDemo.Column2.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .F.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdDemo.Column3.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdDemo.Column3.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .F.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdDemo.Column4.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdDemo.Column4.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .F.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Line1' AS line WITH ;
		Height = 0, ;
		Left = 10, ;
		Name = "Line1", ;
		Top = 229, ;
		Width = 580
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'mngGrdDemo' AS mngrgrid WITH ;
		Anchor = 12, ;
		autosizecolumns = Column1, ;
		findenabled = .T., ;
		Left = 565, ;
		Name = "mngGrdDemo", ;
		ogrid = Thisform.grdDemo, ;
		sortcolumns = Column2, Column1, ;
		TabIndex = 2, ;
		Top = 204
		*< END OBJECT: ClassLib="managers.vcx" BaseClass="container" />

	ADD OBJECT 'optMngGrdDemoAutoSizeColumnsMode' AS optiongroup WITH ;
		Anchor = 6, ;
		AutoSize = .T., ;
		ButtonCount = 3, ;
		Height = 26, ;
		Left = 285, ;
		Name = "optMngGrdDemoAutoSizeColumnsMode", ;
		TabIndex = 8, ;
		ToolTipText = "AutoSizeMode", ;
		Top = 270, ;
		Value = 1, ;
		Width = 101, ;
		Option1.AutoSize = .F., ;
		Option1.Caption = "0", ;
		Option1.FontName = "Courier New", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Style = 0, ;
		Option1.ToolTipText = "0 - AutoSize all columns", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 29, ;
		Option2.AutoSize = .F., ;
		Option2.Caption = "1", ;
		Option2.FontName = "Courier New", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 36, ;
		Option2.Name = "Option2", ;
		Option2.Style = 0, ;
		Option2.ToolTipText = "1- AutoSize all columns except columns in AutoSizeColumns", ;
		Option2.Top = 5, ;
		Option2.Width = 29, ;
		Option3.AutoSize = .F., ;
		Option3.Caption = "2", ;
		Option3.FontName = "Courier New", ;
		Option3.FontSize = 8, ;
		Option3.Height = 16, ;
		Option3.Left = 67, ;
		Option3.Name = "Option3", ;
		Option3.Style = 0, ;
		Option3.ToolTipText = "2 - AutoSize only columns in AutoSizeColumns", ;
		Option3.Top = 5, ;
		Option3.Width = 29
		*< END OBJECT: BaseClass="optiongroup" />

	ADD OBJECT 'optMngGrdDemoDynamicPropertiesMode' AS optiongroup WITH ;
		Anchor = 6, ;
		ButtonCount = 3, ;
		Height = 26, ;
		Left = 285, ;
		Name = "optMngGrdDemoDynamicPropertiesMode", ;
		TabIndex = 11, ;
		ToolTipText = "DynamicPropertiesMode", ;
		Top = 300, ;
		Value = 1, ;
		Width = 100, ;
		Option1.AutoSize = .F., ;
		Option1.Caption = "0", ;
		Option1.FontName = "Courier New", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Style = 0, ;
		Option1.ToolTipText = "0 - Rude", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 29, ;
		Option2.AutoSize = .F., ;
		Option2.Caption = "1", ;
		Option2.FontName = "Courier New", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 36, ;
		Option2.Name = "Option2", ;
		Option2.Style = 0, ;
		Option2.ToolTipText = "1- Polite", ;
		Option2.Top = 5, ;
		Option2.Width = 29, ;
		Option3.AutoSize = .F., ;
		Option3.Caption = "2", ;
		Option3.FontName = "Courier New", ;
		Option3.FontSize = 8, ;
		Option3.Height = 16, ;
		Option3.Left = 67, ;
		Option3.Name = "Option3", ;
		Option3.Style = 0, ;
		Option3.ToolTipText = "2 - Respectful", ;
		Option3.Top = 5, ;
		Option3.Width = 29
		*< END OBJECT: BaseClass="optiongroup" />

	ADD OBJECT 'txtMngGrdDemoAutoSizeColumns' AS textbox WITH ;
		Anchor = 14, ;
		ControlSource = "Thisform.mngGrdDemo.AutoSizeColumns", ;
		Height = 23, ;
		Left = 400, ;
		Name = "txtMngGrdDemoAutoSizeColumns", ;
		TabIndex = 9, ;
		ToolTipText = "AutoSizeColumns", ;
		Top = 270, ;
		Width = 185
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtMngGrdDemoSortColumns' AS textbox WITH ;
		Anchor = 14, ;
		ControlSource = "Thisform.mngGrdDemo.SortColumns", ;
		Height = 23, ;
		Left = 285, ;
		Name = "txtMngGrdDemoSortColumns", ;
		TabIndex = 13, ;
		ToolTipText = "Sort columns list", ;
		Top = 330, ;
		Width = 300
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE gridgetclientleftright
		Lparameters nLeft, nRight
		
		Local oGrid As Grid
		
		*m.oGrid = This.oGrid
		m.oGrid = Thisform.grdDemo
		
		If (Vartype(m.oGrid) <> 'O')
			Return
		EndIf
		
		Local Old_nWhere_Out As Integer, ;
				nWhere_Out As Integer, ;
				nRelRow_Out As Integer, ;
				nRelCol_Out As Integer, ;
				nView_Out As Integer, ;
				lResizable As Logical, ;
				nResizableColumnCount As Integer, ;
				nViewWidth As Integer, ;
				nColumnWidth As Integer, ;
				nFixedColumnsWidth AS Integer, ;
				nColumnWidthRemanent As Integer, ;
				nNewWidth As Integer
		
		*-- Calculamos la posición de la primera columna y del final del grid.
		m.Old_nWhere_Out = -1
		m.nLeft = -1
		m.nRight = m.oGrid.Left + m.oGrid.Width && Inicializamos al largo más la posición izquierda.
		For m.i = 1 To m.oGrid.Width
			m.nWhere_Out = 0
			m.nRelRow_Out = 0
			m.nRelCol_Out = 0
			m.nView_Out = 0
			m.x = m.oGrid.Left + m.i
			m.y = m.oGrid.Top + Int(m.oGrid.HeaderHeight/2)
			m.oGrid.GridHitTest(m.x, m.y, @m.nWhere_Out, @m.nRelRow_Out, @m.nRelCol_Out, @m.nView_Out)
			If (m.Old_nWhere_Out <> m.nWhere_Out)
				m.Old_nWhere_Out = m.nWhere_Out
				Do case
					Case (m.nWhere_Out = 1)		&& 1 - Column header.
		 
						If (m.nLeft = -1)
							m.nLeft = m.x
						EndIf
						
					Case (m.nWhere_Out = 17)	&& 17 - Vertical scrollbar. 
		 				m.nRight = m.x
		
					*Otherwise
						*-- Nada.				
				EndCase
			EndIf
		EndFor
		
		Return .t.
		
	ENDPROC

	PROCEDURE btnCicleGridElements.Click
		Local m.oGrid As Grid
		
		m.oGrid = Thisform.grdDemo
		If m.oGrid.DeleteMark
			m.oGrid.DeleteMark = .f.
		Else
			If m.oGrid.RecordMark
				m.oGrid.RecordMark = .f.
			Else
				If (m.oGrid.ScrollBars = 3)
					m.oGrid.ScrollBars = 0
				Else
					m.oGrid.DeleteMark = .t.
					m.oGrid.RecordMark = .t.
					m.oGrid.ScrollBars = 3
				EndIf 
			EndIf 
		EndIf
		m.oGrid.Resize()
		
	ENDPROC

	PROCEDURE btnRestoreSources.Click
		Thisform.mngGrdDemo.RestoreSources()
		
	ENDPROC

	PROCEDURE btnSaveSources.Click
		Thisform.mngGrdDemo.SaveSources()
		
	ENDPROC

	PROCEDURE chkMngGrdDemoFindBoxAlwaysVisible.Refresh
		This.Enabled = not This.Parent.chkMngGrdDemoFindEnabled.Value
		
	ENDPROC

	PROCEDURE chkMngGrdDemoFindEnabled.InteractiveChange
		This.Parent.chkMngGrdDemoFindBoxAlwaysVisible.Refresh()
		
	ENDPROC

	PROCEDURE cmdFooter.Click
		*-- Todo:
		*-- Hay que llamar a este código desde al autosize del manager,
		*-- desde todos los eventos Resize() de todas las columnas
		*-- y desde el Resize() del grid.
		*-- Usar autoscrolled para determinar si hubo scroll y en que dirección.
		*--
		
		#DEFINE	c_MNGRGRID_FOOTER_HEIGHT		25
		#DEFINE	c_MNGRGRID_FOOTER_MARGIN_BOTTOM	1
		#DEFINE	c_MNGRGRID_FOOTER_MARGIN_TOP	1
		#DEFINE	c_MNGRGRID_FOOTER_BACKCOLOR		Rgb(192, 192, 192)
		#DEFINE	c_MNGRGRID_FOOTER_FORECOLOR		Rgb(0, 0, 0)
		
		Local oGrid As Grid, ;
			i As Integer, ;
			j As Integer, ;
			oColumn As Column, ;
			oTextBox As TextBox, ;
			nGriClientdRight As Integer, ;
			nColumnLeft As Integer, ;
			nColumnWidth As Integer
			
		m.oGrid = Thisform.grdDemo
		
		If (Thisform.ControlsCount <= 0)
			m.oGrid.Height = m.oGrid.Height - c_MNGRGRID_FOOTER_HEIGHT
		EndIf
		
		Thisform.ControlsCount = m.oGrid.ColumnCount
		Dimension Thisform.aControls(Thisform.ControlsCount)
		
		Thisform.GridGetClientLeftRight(@m.nColumnLeft, @m.nGriClientdRight)
		For m.i = 1 To m.oGrid.ColumnCount
		
			*-- Locate the column using position.
			m.oColumn = .f.
			For Each m.oColumn As Column In m.oGrid.Columns
				If (m.oColumn.ColumnOrder = m.i)
					Exit
				EndIf
			EndFor
			
			If (Vartype(m.oColumn) <> 'O')
				Loop
			EndIf
			
			If (Vartype(Thisform.aControls(m.i)) <> 'O')
				Thisform.AddObject(m.oGrid.Name + m.oGrid.Columns(m.i).Name + 'Footer', 'Textbox')
				m.oTextBox = Evaluate('Thisform.' + m.oGrid.Name + m.oGrid.Columns(m.i).Name + 'Footer')
				If (Vartype(m.oTextBox) = 'O')
					Thisform.aControls(m.i) = m.oTextBox
					m.oTextBox.BackColor = c_MNGRGRID_FOOTER_BACKCOLOR
					m.oTextBox.ForeColor = c_MNGRGRID_FOOTER_FORECOLOR
					m.oTextBox.DisabledBackColor = c_MNGRGRID_FOOTER_BACKCOLOR
					m.oTextBox.Height = c_MNGRGRID_FOOTER_HEIGHT - c_MNGRGRID_FOOTER_MARGIN_TOP - c_MNGRGRID_FOOTER_MARGIN_BOTTOM
					m.oTextBox.ReadOnly = .t.
					m.oTextBox.Visible = .f.
					Thisform.AddProperty(m.oTextBox.Name + 'ControlSource', m.oTextBox.Name + 'ControlSource')
					m.oTextBox.ControlSource = 'Thisform.' + m.oTextBox.Name + 'ControlSource'
				EndIf
			Else
				m.oTextBox = Thisform.aControls(m.i)
			EndIf
		
			If m.oColumn.Visible ;
				and (m.i >= m.oGrid.LeftColumn)
				
				m.nColumnWidth = m.oColumn.Width
				If (m.nColumnLeft + m.nColumnWidth > m.nGriClientdRight)
					m.nColumnWidth = m.nGriClientdRight - m.nColumnLeft
				EndIf
				m.oTextBox.Width = Max(m.nColumnWidth, 0)
				m.oTextBox.Left = m.nColumnLeft
				m.nColumnLeft = m.nColumnLeft + m.oColumn.Width + 1 && Only 1, GridLineWidth affects columns width.
				m.oTextBox.Top = m.oGrid.Top + m.oGrid.Height + c_MNGRGRID_FOOTER_MARGIN_TOP
				m.oTextBox.Visible = (m.nColumnWidth > 5) && Avoid display a control with a size smaller than 5.
			Else
				m.oTextBox.Visible = .f.
			EndIf
		EndFor
		
		
		*!*	For m.i = 1 To Thisform.ControlsCount
		*!*		m.ControlSource = 'Thisform.' + m.oGrid.Name + m.oGrid.Columns(m.i).Name + 'Footer' + 'ControlSource'
		*!*		If (Type(m.ControlSource) <> 'U')
		*!*			&ControlSource = Rand()
		*!*			Thisform.aControls(m.i).Refresh()
		*!*		EndIf 
		*!*	EndFor
		
	ENDPROC

	PROCEDURE cmdFooterUpdate.Click
		*-- Todo:
		*-- Hay que llamar a este código desde al autosize del manager,
		*-- desde todos los eventos Resize() de todas las columnas
		*-- y desde el Resize() del grid.
		*-- Usar autoscrolled para determinar si hubo scroll y en que dirección.
		*--
		Local oGrid As Grid, ;
			i As Integer, ;
			oColumn As Column, ;
			oTextBox As TextBox, ;
			nGriClientdRight As Integer, ;
			nColumnLeft As Integer, ;
			nColumnWidth As Integer
			
		m.oGrid = Thisform.grdDemo
		
		*m.Macro = m.oGrid.Columns(1).Text1.ControlSource
		*Replace &Macro With 'X' ;
			In m.oGrid.RecordSource
		
		*Thisform.grdDEmo.Columns(1).Text1.Value = 'X'
		
		For m.i = 1 To Thisform.ControlsCount
			m.ControlSource = 'Thisform.' + m.oGrid.Name + m.oGrid.Columns(m.i).Name + 'Footer' + 'ControlSource'
			If (Type(m.ControlSource) <> 'U')
				&ControlSource = Rand()
				Thisform.aControls(m.i).Refresh()
			EndIf 
		EndFor
		
	ENDPROC

	PROCEDURE grdDemo.AfterRowColChange
		LParameters nColIndex
		
		If (Type('Thisform.cmdFooter') = 'O')
			Thisform.cmdFooter.Click()
		EndIf 
		
	ENDPROC

	PROCEDURE grdDemo.Column1.Moved
		Thisform.cmdFooter.Click()
		
	ENDPROC

	PROCEDURE grdDemo.Column1.Resize
		Thisform.cmdFooter.Click()
		
	ENDPROC

	PROCEDURE grdDemo.Column2.Moved
		Thisform.cmdFooter.Click()
		
	ENDPROC

	PROCEDURE grdDemo.Column2.Resize
		Thisform.cmdFooter.Click()
		
	ENDPROC

	PROCEDURE grdDemo.Column3.Moved
		Thisform.cmdFooter.Click()
		
	ENDPROC

	PROCEDURE grdDemo.Column3.Resize
		Thisform.cmdFooter.Click()
		
	ENDPROC

	PROCEDURE grdDemo.Column4.Moved
		Thisform.cmdFooter.Click()
		
	ENDPROC

	PROCEDURE grdDemo.Column4.Resize
		Thisform.cmdFooter.Click()
		
	ENDPROC

	PROCEDURE grdDemo.Resize
		Thisform.cmdFooter.Click()
		
	ENDPROC

	PROCEDURE grdDemo.Scrolled
		Lparameters nDirection
		
		If InList(m.nDirection, 4, 5, 6, 7)
			Thisform.cmdFooter.Click()
		EndIf
		
	ENDPROC

	PROCEDURE mngGrdDemo.autosized
		Lparameters nState As Integer	&& nState: 1 - Before, 2 - After.
		
		If (m.nState = 2)
			Thisform.cmdFooter.Click()
		EndIf
	ENDPROC

	PROCEDURE mngGrdDemo.oncolumnsort
		Lparameters cControlSource As String, ;
			cSortOrder As String && cSortOrder = < ASC | DES >, Return 0 - Sort&Order, 1 - Only Sort, -1 - Fail
		
		Local cMacro As String
		
		m.cSortOrder = Iif((m.cSortOrder = 'ASC'), 'ASCENDING', 'DESCENDING')
		Do case
			Case (Upper(Alltrim(m.cControlSource)) == 'CUSTOMERS.CUSTOMERID')
				m.cMacro = 'CustId In ' + Thisform.grdDemo.RecordSource + ' ' + m.cSortOrder
		
			Case (Upper(Alltrim(cControlSource)) == 'CUSTOMERS.COMPANYNAM')
				m.cMacro = 'CompNam In ' + Thisform.grdDemo.RecordSource + ' ' + m.cSortOrder
		
			Otherwise
				m.cMacro = ''
		EndCase
		
		If not Empty(m.cMacro)
			m.cMacro = 'Set Order To ' + m.cMacro
			&cMacro
		EndIf
		
		Return 0
		
	ENDPROC

	PROCEDURE mngGrdDemo.onfind
		Lparameters cText As String, nFlags As Integer
		
		Local cAlias As String, ;
			cControlSource As String, ;
			vCurrValue, ;
			cOperator As String, ;
			cColumns As String, ;
			cOrder As String, ;
			oActiveSortColumn As Object, ;
			cCompareControlSource As String, ;
			cMacro As String
			
		Local Array aValues(1)
		
		Thisform.grdDemo.SetFocus() && Required by Thisform.grdDemo.ActiveColumn.
		m.cAlias = Thisform.grdDemo.RecordSource
		m.cControlSource = Thisform.grdDemo.Columns(Thisform.grdDemo.ActiveColumn).ControlSource
		m.cOperator = Iif(Empty(Bitand(m.nFlags, 2^1)), '>', '<') 
		
		m.cOrderExpression = Sys(14, Tagno(Order(m.cAlias), Cdx(1, m.cAlias)), m.cAlias)
		If not Empty(m.cOrderExpression)
			m.cColumns = 'Recno() As SortRecno, ' + m.cOrderExpression + ' as SortOrder'
			m.cOrder = 'SortOrder ' + Iif(Empty(Bitand(m.nFlags, 2^1)), 'ASC', 'DESC')
		Else
			m.cColumns = 'Recno() As SortRecno'
			m.cOrder = 'SortRecno ' + Iif(Empty(Bitand(m.nFlags, 2^1)), 'ASC', 'DESC')
		EndIf
		
		*-- Cases:
		*-- 	1 - Sort activo.	Ok
		*--		2 - Sort inactivo.	Ok
		m.oActiveSortColumn = This.ActiveSortColumn
		If (Vartype(m.oActiveSortColumn) = 'O')
			m.cCompareControlSource = m.oActiveSortColumn.ControlSource
			If Empty(Bitand(m.nFlags, 2^0))
				m.vCurrValue = '"' + Iif(At('.', m.cCompareControlSource) <= 0, Evaluate(m.cAlias + '.' + m.cCompareControlSource), Evaluate(m.cCompareControlSource)) + '"'
			Else
				m.vCurrValue = '" "' && Without space query returns and empty recorset.
			EndIf
		Else
			m.cCompareControlSource = 'Recno()'
			If Empty(Bitand(m.nFlags, 2^0))
				m.vCurrValue = Recno(m.cAlias)
			Else
				m.vCurrValue = 0
			EndIf	
		EndIf
		
		Text To cMacro Textmerge Noshow Pretext 15
			Select <<m.cColumns>>
			From <<m.cAlias>>
			Where (<<m.cCompareControlSource>> <<m.cOperator>> <<m.vCurrValue>>) and (Upper('<<m.cText>>')$Upper(<<m.cControlSource>>))
			Order By <<m.cOrder>>
			Into Array aValues
		EndText
		
		&cMacro
		
		If (_Tally > 0)
			Go (m.aValues(1)) ;
				In (m.cAlias)
		EndIf
		
	ENDPROC

	PROCEDURE optMngGrdDemoAutoSizeColumnsMode.Init
		This.Value = Thisform.mngGrdDemo.AutoSizeColumnsMode + 1
		
	ENDPROC

	PROCEDURE optMngGrdDemoAutoSizeColumnsMode.InteractiveChange
		Thisform.mngGrdDemo.AutoSizeColumnsMode = This.Value - 1
		
	ENDPROC

	PROCEDURE optMngGrdDemoDynamicPropertiesMode.Init
		This.Value = Thisform.mngGrdDemo.DynamicPropertiesMode + 1
		
	ENDPROC

	PROCEDURE optMngGrdDemoDynamicPropertiesMode.InteractiveChange
		Thisform.mngGrdDemo.DynamicPropertiesMode = This.Value - 1
		
	ENDPROC

ENDDEFINE
